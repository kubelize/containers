apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmp-server
  namespace: argocd
data:
  # Mount the gomplate CMP plugin
  plugin.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: gomplate
    spec:
      version: v1.0
      discover:
        find:
          glob: "**/*.{gotmpl,tmpl}"
          command:
            - sh
            - -c
            - |
              if find . -name "*.gotmpl" -o -name "*.tmpl" -o -name "gomplate.yaml" -o -name ".gomplate.yaml" | grep -q .; then
                echo "gomplate templates detected"
                exit 0
              fi
              exit 1
      generate:
        command:
          - sh
          - -c
          - |
            OUTPUT_DIR=${GOMPLATE_OUTPUT_DIR:-.}
            
            if [ -f "gomplate.yaml" ] || [ -f ".gomplate.yaml" ]; then
              echo "Using gomplate config file"
              gomplate --config gomplate.yaml 2>/dev/null || gomplate --config .gomplate.yaml
            else
              echo "Processing gomplate templates..."
              find . -name "*.gotmpl" -o -name "*.tmpl" | while read template; do
                output_file="${template%.gotmpl}"
                output_file="${output_file%.tmpl}"
                
                echo "Processing: $template -> $output_file"
                gomplate -f "$template" -o "$output_file"
              done
            fi
            
            find . -name "*.yaml" -o -name "*.yml" | while read yaml_file; do
              echo "---"
              cat "$yaml_file"
            done
      preserveFileMode: false

---
# Helm values for ArgoCD with gomplate CMP
# Save this as argocd-values.yaml and use with:
# helm install argocd argo/argo-cd -f argocd-values.yaml

# Configuration for the repo server to include the gomplate CMP
repoServer:
  # Add the gomplate CMP as a sidecar container
  extraContainers:
    - name: gomplate-cmp
      image: kubelize/gomplate-cmp:latest
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp-dir

  # Mount the CMP server socket
  volumes:
    - name: gomplate-cmp-tmp
      emptyDir: {}

# Enable the CMP server
server:
  config:
    # Register the gomplate plugin
    configManagementPlugins: |
      - name: gomplate
        discover:
          find:
            glob: "**/*.{gotmpl,tmpl}"
        generate:
          command: ["sh", "-c"]
          args:
            - |
              if find . -name "*.gotmpl" -o -name "*.tmpl" -o -name "gomplate.yaml" -o -name ".gomplate.yaml" | grep -q .; then
                OUTPUT_DIR=${GOMPLATE_OUTPUT_DIR:-.}
                
                if [ -f "gomplate.yaml" ] || [ -f ".gomplate.yaml" ]; then
                  gomplate --config gomplate.yaml 2>/dev/null || gomplate --config .gomplate.yaml
                else
                  find . -name "*.gotmpl" -o -name "*.tmpl" | while read template; do
                    output_file="${template%.gotmpl}"
                    output_file="${output_file%.tmpl}"
                    gomplate -f "$template" -o "$output_file"
                  done
                fi
                
                find . -name "*.yaml" -o -name "*.yml" | while read yaml_file; do
                  echo "---"
                  cat "$yaml_file"
                done
              fi
